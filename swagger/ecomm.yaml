openapi: 3.0.0
info:
  title: API de Produtos
  version: 1.0.0
paths:
  /api/categories:
    get:
      summary: Listagem de categorias
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Category'
        '404':
            description: Categoria não encontrada.
            content:
              application/json:
                example: "Not Found"
  /api/admin/categories:
    post:
      summary: Inserção de categorias
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CategoryInput'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
  /api/categories/{id}:
    get:
      summary: Detalhamento de categoria
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: ID da categoria
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
        '404':
            description: Categoria não encontrada.
            content:
              application/json:
                example: "Not Found"
    put:
      summary: Atualizar dados de uma categoria (apenas para administradores)
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: ID da categoria a ser atualizada
        - in: body
          name: body
          required: true
          description: Dados da categoria a serem atualizados
          schema:
            $ref: '#/components/schemas/Categoria'
      responses:
        '200':
          description: Categoria atualizada com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Categoria'
        '401':
          description: Acesso não autorizado (não é um administrador)
        '404':
          description: Categoria não encontrada
        '500':
          description: Erro interno do servidor

    delete:
      summary: Remover uma categoria (apenas para administradores)
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: ID da categoria a ser removida
      responses:
        '204':
          description: Categoria removida com sucesso
        '401':
          description: Acesso não autorizado (não é um administrador)
        '404':
          description: Categoria não encontrada
        '500':
          description: Erro interno do servidor

  /api/admin/products:
    post:
      summary: Inserir um novo produto (apenas para administradores)
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NovoProduto'
      responses:
        '201':
          description: Produto criado com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Produto'
        '401':
          description: Acesso não autorizado (não é um administrador)
        '500':
          description: Erro interno do servidor

  /api/products:
    get:
      summary: Listar produtos existentes (com dados da categoria)
      responses:
        '200':
          description: Lista de produtos com dados da categoria
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListaProdutos'
        '500':
          description: Erro interno do servidor

  /api/products/{id}:
    get:
      summary: Detalhar um produto pelo ID (com dados da categoria)
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: ID do produto a ser detalhado
      responses:
        '200':
          description: Dados do produto com dados da categoria
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Produto'
        '404':
          description: Produto não encontrado
        '500':
          description: Erro interno do servidor

  /api/admin/products/{id}:
    put:
      summary: Atualizar dados de um produto (apenas para administradores)
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: ID do produto a ser atualizado
        - in: body
          name: body
          required: true
          description: Dados do produto a serem atualizados
          schema:
            $ref: '#/components/schemas/Produto'
      responses:
        '200':
          description: Produto atualizado com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Produto'
        '401':
          description: Acesso não autorizado (não é um administrador)
        '404':
          description: Produto não encontrado
        '500':
          description: Erro interno do servidor

  /api/admin/products/{id}:
    delete:
      summary: Remover um produto (apenas para administradores)
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: ID do produto a ser removido
      responses:
        '204':
          description: Produto removido com sucesso
        '401':
          description: Acesso não autorizado (não é um administrador)
        '404':
          description: Produto não encontrado
        '500':
          description: Erro interno do servidor
  /api/admin/users:
    post:
      summary: Inserir um novo usuário (apenas para administradores)
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NovoUsuario'
      responses:
        '201':
          description: Usuário criado com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Usuario'
        '401':
          description: Acesso não autorizado (não é um administrador)
        '500':
          description: Erro interno do servidor

  /api/admin/users:
    get:
      summary: Listar usuários existentes (apenas para administradores)
      responses:
        '200':
          description: Lista de usuários existentes
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListaUsuarios'
        '401':
          description: Acesso não autorizado (não é um administrador)
        '500':
          description: Erro interno do servidor

  /api/users/{id}:
    get:
      summary: Detalhar um usuário pelo ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: ID do usuário a ser detalhado
      responses:
        '200':
          description: Dados do usuário
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Usuario'
        '404':
          description: Usuário não encontrado
        '500':
          description: Erro interno do servidor

  /api/admin/users/{id}:
    put:
      summary: Atualizar dados de um usuário (apenas para administradores)
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: ID do usuário a ser atualizado
        - in: body
          name: body
          required: true
          description: Dados do usuário a serem atualizados
          schema:
            $ref: '#/components/schemas/Usuario'
      responses:
        '200':
          description: Usuário atualizado com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Usuario'
        '401':
          description: Acesso não autorizado (não é um administrador)
        '404':
          description: Usuário não encontrado
        '500':
          description: Erro interno do servidor

  /api/admin/users/{id}:
    delete:
      summary: Remover um usuário (apenas para administradores)
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: ID do usuário a ser removido
      responses:
        '204':
          description: Usuário removido com sucesso
        '401':
          description: Acesso não autorizado (não é um administrador)
        '404':
          description: Usuário não encontrado
        '500':
          description: Erro interno do servidor
  /api/orders:
    post:
      summary: Realizar um novo pedido
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NovoPedido'
      responses:
        '201':
          description: Pedido realizado com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pedido'
        '500':
          description: Erro interno do servidor

  /api/orders/{id}:
    get:
      summary: Detalhar um pedido pelo ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: ID do pedido a ser detalhado
      responses:
        '200':
          description: Dados do pedido
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pedido'
        '404':
          description: Pedido não encontrado
        '500':
          description: Erro interno do servidor


components:
  schemas:
    Category:
      type: object
      properties:
        id:
          type: string
          description: ID da categoria
        nome:
          type: string
          description: Nome da categoria
        status:
          type: string
          description: Status da categoria
    CategoryInput:
      type: object
      properties:
        nome:
          type: string
          description: Nome da categoria
        status:
          type: string
          description: Status da categoria
